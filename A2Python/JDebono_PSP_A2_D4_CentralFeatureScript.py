#JDebono_PSP_A2_D4_CentralFeatureScript.py
#Nov 2020
#For: PSP F2020 - Addignment 2, Deliverable 4
#original Model made in ArcPro modelbuilder (CentralFeatureModel)
#model exported to python script to be modified and run in a script tool (CentralFeatureScript tool within the MyPSPTools.tbx)
#uses a series of shapefiles from a user indicated Input Folder
#modifies the input features to be projected to Canada_Albers_Equal_Area_Conic with the Project Tool
#additionally modifies projected features to identify the centrally located feature
#outputs modifed features are new shapefiles into a folder, not a geodatabase
# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2020-11-24 20:41:05
"""
import arcpy

from arcpy import env

def CentralFeatureScript(Input_Folder, Output_Folder):  # CentralFeatureModel function

    # To allow overwriting outputs
    arcpy.env.overwriteOutput = True
    # set the workspace to the Input_Folder parameter from the model
    arcpy.env.workspace = Input_Folder
    
    #get list of feature classes in the Input Workspace (ArcPyGPData)
    fcs= arcpy.ListFeatureClasses() 
    #loop to run the tools for the model
    for feature in fcs:
        
        FeatureP = Output_Folder + "\\Project_" + feature
        # Project tool: transform input layers to Canada_Albers_Equal_Area_Conic projection
        arcpy.management.Project(feature, FeatureP, "PROJCS['Canada_Albers_Equal_Area_Conic',\
            GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',\
            6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],\
            PROJECTION['Albers'],PARAMETER['False_Easting',0.0],PARAMETER['False_Northing',0.0],\
            PARAMETER['Central_Meridian',-96.0],PARAMETER['Standard_Parallel_1',\
            50.0],PARAMETER['Standard_Parallel_2',70.0],PARAMETER['Latitude_Of_Origin',40.0],\
            UNIT['Meter',1.0]]", [], "", "NO_PRESERVE_SHAPE", "", "NO_VERTICAL")

        fileDesc = arcpy.Describe(feature) 
        #print("Shape Type:       " + fileDesc.shapeType  )

        if fileDesc.shapeType is "Polyline":
            FeatureCF = Output_Folder + "\\CentralFeature_" + feature
            # Central feature Tool: Identifies the most centrally located feature in a point, line, or polygon feature class.
            arcpy.stats.CentralFeature(feature, FeatureCF, "EUCLIDEAN_DISTANCE", )

if __name__ == '__main__':
    # Global Environment settings
        InputF = arcpy.GetParameterAsText(0)
        OutputF = arcpy.GetParameterAsText(1)
        CentralFeatureScript(InputF, OutputF) # function call
